#ifndef CATEGORIESFORM_H
#define CATEGORIESFORM_H

#include <QWidget>
#include <QListWidget>

#include <algorithm>

#include "programcontext.h"

namespace Ui {
class CategoriesForm;
}

/**
 * @brief Class for *Add article* window.
 * 
 * Lets you select what categories the article should be in and what newspaper should the article be inserted in.
 */
class CategoriesForm : public QWidget
{
	Q_OBJECT

public:
	/**
	 * @brief Construct a new Categories Form object. 
	 * 
	 * Generated by QtCreator.
	 */
	explicit CategoriesForm(QWidget *parent = nullptr);

	/**
	 * @brief Destroy the Categories Form object.
	 * 
	 * Generated by QtCreator.
	 */
	~CategoriesForm();

	std::set<std::string> categories; //set of categories of new article, used for export

	/**
	 * @brief Set the program context of the window.
	 * 
	 * @param c Pointer to program context to use.
	 */
	void set_program_context(ProgramContext* c) {
		ctx = c;
	}

public slots:
	/**
	 * @brief Add a new article from file from provided path.
	 * 
	 * @param path Path to article file to add.
	 */
	void add_new_article(QString path, pk_t news_id);

private slots:
	/**
	 * @brief Add category button behavior.
	 * 
	 * Button inserts the text from lineEdit_category into listWidget_categories and categories container.
	 */
	void on_pushButton_add_category_clicked();

	/**
	 * @brief Remove category button behavior.
	 * 
	 * Iterates through listWiget_categories selected items and will remove them from `categories` set.
	 * ... and from listWidget_categories as well.
	 */
	void on_pushButton_remove_category_clicked();

	/**
	 * @brief Accept button click behaviour.
	 * 
	 * Initializes new article and inserts it to the map with articles for my
	 * newspaper.
	 * 
	 * If external news were seleted, it sends the message to the chief editor
	 * of those newspaper that new article was written.
	 * 
	 */
	void on_pushButton_accept_clicked();

	/**
	 * @brief Cancel button behaviour.
	 * 
	 * Discards all changes made and clears all lineEdit-s and listWidget-s. 
	 * 
	 */
	void on_pushButton_cancel_clicked();

	/**
	 * @brief Handles the behaviour when the window is closing.
	 * 
	 */
	void closeEvent(QCloseEvent *event) override;

	/**
	 * @brief Handles the action when window is opening.
	 */
	void showEvent(QShowEvent *event) override;

	/**
	 * @brief Enables or disables the Remove category button based on selection
	 * of items in listWidget.
	 */
	void on_listWidget_categories_itemSelectionChanged();

private:
	Ui::CategoriesForm *ui;
	ProgramContext* ctx; //program context
	QString path; //path to article file
	pk_t news_id_;
};

#endif // CATEGORIESFORM_H
